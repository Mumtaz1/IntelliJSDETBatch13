What is Method overriding in Java?
    When same method with same header exists in the child class as well we call it
    method overriding.

Why we should override a method?
    If we inherit from a class all the methods which are not private they are
    inherited in the child class. If we don't like some of these methods maybe because
    they consume more internet bandwidth or consume a lot of CPU or use a lot of
    memory we can override them in the child class.

How can we use method overriding?
    1. We must first inherit from a class.
    2. We can re-declare the method with same header and provide the body of our choice.
    Example:

    class Parent {

    void eat() {
    System.out.println(" I like to eat Beef");
    }
    void sleep() {
     System.out.println(" I like to sleep 8 hours a day");
    }
    }
    class Child extends Parent{

    void eat() {
    System.out.println(" I like to eat Mutton");
    }class Parent{

     void eat(){
     System.out.println(" I like to eat Beef");
     }
     void sleep(){
     System.out.println(" I like to sleep 8 hours a day");
     }
     }
     class Child extends Parent{

     void eat(){
     System.out.println("I like to eat Mutton");
     }
    }

Rules:
    1. We must have a super class derived class relationship. Note a super class is aka parent class.
    2. Method in the parent and child class must have same headers but they can be
       different in terms of access modifiers and in very rare conditions in terms of return type.
    3. We can't change the access modifier from public to protected or default but we can do
       it in reverse order.
    4. We can't override constructor because they are also not inherited.
    5. If a method is static we use a different terminology its called method redeclaration
       instead of overriding.

=====================================================

What is Polymorphism?

