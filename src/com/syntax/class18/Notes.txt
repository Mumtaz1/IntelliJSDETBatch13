What is a Constructor in Java?
    A constructor is a special block of code that helps us give
    initial values to the fields of a class. Initialization of
    object or instance.

Why we should use a Constructor?
     1. When we use the constructor to initialize the object it
        looks more readable and cleaner.
     2. If the fields of a class are private it's not possible to
        access them outside a class without constructor or a
        method which means we can't initialize them without a
        method or a constructor.
     3. We can enforce rules like what kind of values are assigned
        to variables with the help of a constructor.
     4. If we want to make sure that some lines of code should always
        be executed when the object of a class is created we can put
        that code inside the constructor.

How to use Constructors.
    We create Constructors inside the class and when an object of
    that class is created the constructor is executed automatically.
    Example
    class Car {
    String make;
    String model;

    Car(String carMake, String carModel) {
    make = carMake;
    model = carModel;
    }

    public static void main(String[] args) {
    Car bmw = new Car("BMW", "m4");

    }
    }

    Rules:
        1. Constructors don't have return types not even void.
        2. The name of the constructor should always be the
           same name as that of the class.
        3. Constructors can't be created with a static keyword
           because we will initialize different object every
           time with constructor.
        4. We can use any access modifiers with Constructors.
        5. If we don't write a constructor in a class a
           default constructor with zero parameters is created
           by the compiler (takes the code written by us and it
           converts that code to byte code which is easier for
           Java to understand).
        6. It is not allowed to have two constructors in a class
           with the same number of parameters and same type.

this keyword:
    We can use the "this" keyword to access the instance variables
    when you have same name variables in your method or constructor
    or any block of code.

this(): Not that common
    Calls the constructors of a class inside other constructors.
    Why we should use it because it helps us to reuse already
    written constructors if they  contain same code.
    Why we want to create multiple constructors on the first place
    because we want to gie end user flexibility that he can create
    the objects of our class in many different ways.
